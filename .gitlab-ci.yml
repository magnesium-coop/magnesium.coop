image: docker:19.03.0-dind

variables:
  DOCKER_TLS_CERTDIR: ""

before_script:
  - docker info
stages:
  - build
  - deploy

build_image:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - dev


deploy_testing:
  stage: deploy
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    DOCKER_HOST: ssh://ubuntu@$TESTING_HOST
    URLS: $CI_PROJECT_TITLE.$CI_ENVIRONMENT_SLUG.magnesium.coop
  environment:
    name: test
    url: https://$CI_PROJECT_TITLE.$TESTING_HOST
  before_script:
    - apk update
    - apk add openssh
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_TESTING_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - URL_LIST=$URLS DOCKER_IMAGE=$CI_REGISTRY_IMAGE DOCKER_TAG=$CI_COMMIT_SHORT_SHA DOCKER_STACK=$CI_PROJECT_TITLE DEPLOY_ENV=$CI_ENVIRONMENT_SLUG docker stack deploy --with-registry-auth -c docker-compose.$CI_ENVIRONMENT_SLUG.yml magnesium_web
  only:
    - dev


deploy_prod:
  stage: deploy
  image: node:latest
  # This folder is cached between builds
  # http://docs.gitlab.com/ce/ci/yaml/README.html#cache
  cache:
    paths:
      - node_modules/
      # Enables git-lab CI caching. Both .cache and public must be cached, otherwise builds will fail.
      - .cache/
      - public/
  script:
    - npm install
    - ./node_modules/.bin/gatsby build --prefix-paths
  artifacts:
    paths:
      - public
  only:
    - master